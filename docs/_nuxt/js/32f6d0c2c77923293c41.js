(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{394:function(n,e,t){"use strict";t.r(e),e.default="# 축(Axis)\n\n데카르트 좌표계에서 사용되는 x/y축입니다.\n\n## x축, y축\n\nx축과 y축 모두 축 선, 눈금, 라벨 및 제목을 포함합니다. 일부 차트는 그리드를 사용하여 데이터 확인과 계산을 지원합니다.\n\n<img max-width=\"830\" width=\"100%\" height=\"100%\"\nsrc=\"images/design/axis/charts_axis_img02.jpg\">\n</img>\n\n일반적인 2D 좌표계는 x축과 y축을 가집니다. X축은 일반적으로 하단에, y축은 좌측에 위치합니다. 설정은 아래와 같습니다:\n\n```js\noption = {\n  xAxis: {\n    // ...\n  },\n  yAxis: {\n    // ...\n  }\n  // ...\n};\n```\n\nx축은 보통 데이터를 관찰하는 관점이라고도 할 수 있는 카테고리의 수를 선언하는데 사용됩니다: \"판매 시간\", \"판매 위치\", \"제품명\" 등. y축은 일반적으로 카테고리의 수치 값을 나타내는데 사용됩니다. 이 데이터는 \"판매 수량\", \"판매 가격\"과 같이 특정 유형의 데이터나 분석해야 하는 지표의 정량적 값을 검사하는데 사용됩니다.\n\n```js\noption = {\n  xAxis: {\n    type: 'time',\n    name: '판매 시간'\n    // ...\n  },\n  yAxis: {\n    type: 'value',\n    name: '판매 수량'\n    // ...\n  }\n  // ...\n};\n```\n\nx축의 범위가 클 때, 줌 기능을 사용하여 차트의 일부 데이터만 표시할 수 있습니다.\n\n```js\noption = {\n  xAxis: {\n    type: 'time',\n    name: '판매 시간'\n    // ...\n  },\n  yAxis: {\n    type: 'value',\n    name: '판매 수량'\n    // ...\n  },\n  dataZoom: []\n  // ...\n};\n```\n\n2차원 데이터에는 두 개 이상의 축이 있을 수 있습니다. ECharts에서는 보통 두 개의 x축 또는 y축이 동시에 있습니다. 같은 위치에서 축의 중첩을 방지하기 위해 [offset](${optionPath}xAxis.offset) 설정을 변경할 수 있습니다. X축은 위쪽과 아래쪽에, y축은 좌측과 우측에 표시될 수 있습니다.\n\n```js\noption = {\n  xAxis: {\n    type: 'time',\n    name: '판매 시간'\n    // ...\n  },\n  yAxis: [\n    {\n      type: 'value',\n      name: '판매 수량'\n      // ...\n    },\n    {\n      type: 'value',\n      name: '판매 가격'\n      // ...\n    }\n  ]\n  // ...\n};\n```\n\n## 축 선(Axis Line)\n\nECharts는 [axisLine](${optionPath}xAxis.axisLine)의 설정을 제공합니다. 양쪽 끝의 화살표나 축의 스타일 등 필요에 따라 설정을 변경할 수 있습니다.\n\n```js\noption = {\n  xAxis: {\n    axisLine: {\n      symbol: 'arrow',\n      lineStyle: {\n        type: 'dashed'\n        // ...\n      }\n    }\n    // ...\n  },\n  yAxis: {\n    axisLine: {\n      symbol: 'arrow',\n      lineStyle: {\n        type: 'dashed'\n        // ...\n      }\n    }\n  }\n  // ...\n};\n```\n\n## 눈금(Tick)\n\nECharts는 [axisTick](${optionPath}xAxis.axisTick) 설정을 제공합니다. 눈금의 길이와 스타일 등 필요에 따라 설정을 변경할 수 있습니다.\n\n```js\noption = {\n  xAxis: {\n    axisTick: {\n      length: 6,\n      lineStyle: {\n        type: 'dashed'\n        // ...\n      }\n    }\n    // ...\n  },\n  yAxis: {\n    axisTick: {\n      length: 6,\n      lineStyle: {\n        type: 'dashed'\n        // ...\n      }\n    }\n  }\n  // ...\n};\n```\n\n## 라벨(Label)\n\nECharts는 [axisLabel](${optionPath}xAxis.axisLabel) 설정을 제공합니다. 텍스트 정렬이나 사용자 정의 라벨 내용 등 필요에 따라 설정을 변경할 수 있습니다.\n\n```js\noption = {\n  xAxis: {\n    axisLabel: {\n      formatter: '{value} kg',\n      align: 'center'\n      // ...\n    }\n    // ...\n  },\n  yAxis: {\n    axisLabel: {\n      formatter: '{value} ¥',\n      align: 'center'\n      // ...\n    }\n  }\n  // ...\n};\n```\n\n## 예제\n\n왼쪽의 y축은 도쿄의 월 평균 기온을, 오른쪽의 y축은 도쿄의 강수량을 나타냅니다. x축은 시간을 나타냅니다. 이는 평균 기온과 강수량 사이의 트렌드와 관계를 보여줍니다.\n\n```js live\noption = {\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: { type: 'cross' }\n  },\n  legend: {},\n  xAxis: [\n    {\n      type: 'category',\n      axisTick: {\n        alignWithLabel: true\n      },\n      axisLabel: {\n        rotate: 30\n      },\n      data: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n      ]\n    }\n  ],\n  yAxis: [\n    {\n      type: 'value',\n      name: 'Precipitation',\n      min: 0,\n      max: 250,\n      position: 'right',\n      axisLabel: {\n        formatter: '{value} ml'\n      }\n    },\n    {\n      type: 'value',\n      name: 'Temperature',\n      min: 0,\n      max: 25,\n      position: 'left',\n      axisLabel: {\n        formatter: '{value} °C'\n      }\n    }\n  ],\n  series: [\n    {\n      name: 'Precipitation',\n      type: 'bar',\n      yAxisIndex: 0,\n      data: [6, 32, 70, 86, 68.7, 100.7, 125.6, 112.2, 78.7, 48.8, 36.0, 19.3]\n    },\n    {\n      name: 'Temperature',\n      type: 'line',\n      smooth: true,\n      yAxisIndex: 1,\n      data: [\n        6.0,\n        10.2,\n        10.3,\n        11.5,\n        10.3,\n        13.2,\n        14.3,\n        16.4,\n        18.0,\n        16.5,\n        12.0,\n        5.2\n      ]\n    }\n  ]\n};\n```\n\n이것은 축 설정 사용법에 대한 간결한 소개입니다. 자세한 내용은 [공식 웹사이트](${optionPath}xAxis)에서 확인하세요.\n"}}]);