(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{411:function(n,t,e){"use strict";e.r(t),t.default="# 누적 막대 차트\n\n때로는 시리즈를 개별적으로 표시할 뿐만 아니라 합계의 추세도 파악하고 싶을 때가 있습니다. 누적 막대 차트를 사용하는 것이 좋은 선택입니다. 이름에서 알 수 있듯이 누적 막대 차트에서는 같은 카테고리의 데이터가 하나의 열에 누적됩니다. 막대의 전체 높이는 총합의 변화를 설명합니다.\n\nECharts로 누적 막대 차트를 구현하는 간단한 방법이 있습니다. 시리즈 그룹의 `stack`에 동일한 문자열 타입 값을 설정해야 합니다. 동일한 `stack` 값을 가진 시리즈는 같은 카테고리에 속하게 됩니다.\n\n```js live\noption = {\n  xAxis: {\n    data: ['A', 'B', 'C', 'D', 'E']\n  },\n  yAxis: {},\n  series: [\n    {\n      data: [10, 22, 28, 43, 49],\n      type: 'bar',\n      stack: 'x'\n    },\n    {\n      data: [5, 4, 3, 5, 10],\n      type: 'bar',\n      stack: 'x'\n    }\n  ]\n};\n```\n\n이 경우 두 번째 시리즈의 위치는 첫 번째 시리즈의 위치를 기준으로 하며, 증가된 높이는 첫 번째 시리즈의 높이에 해당합니다. 따라서 두 번째 시리즈의 위치에서 두 시리즈의 합계 변화 추세를 찾을 수 있습니다.\n\n> `stack`의 값은 어떤 시리즈가 함께 누적될 것인지를 설명합니다. 이론적으로 'stack'의 특정 값은 의미가 없습니다. 하지만 읽기 편의를 위해 의미 있는 문자열을 선호합니다.\n>\n> 예를 들어, 남성과 여성의 수를 세는 4개의 시리즈가 있는 차트가 있다고 합시다. \"성인 남성\"과 \"소년\"은 누적되어야 하고 \"성인 여성\"과 \"소녀\"는 누적되어야 합니다. 이 경우 `stack`의 의미 있는 값은 `'male'`과 `'female'`입니다. `'a'`와 `'b'`와 같은 의미 없는 문자열로도 같은 효과를 얻을 수 있지만 코드의 가독성이 떨어집니다.\n"}}]);